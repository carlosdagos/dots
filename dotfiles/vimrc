set directory=~/.vim/backup
set backupdir=~/.vim/backup   " keep swap files here

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
Plugin 'bling/vim-airline'
Plugin 'mileszs/ack.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'easymotion/vim-easymotion'
Plugin 'benmills/vimux'
Plugin 'zenorocha/dracula-theme', {'rtp': 'vim/'}
Plugin 'rodjek/vim-puppet'
Plugin 'kchmck/vim-coffee-script'
Plugin 'airblade/vim-gitgutter'
Plugin 'neovimhaskell/haskell-vim'
Plugin 'derekwyatt/vim-scala'

" old Vundle stuff
Bundle 'wikitopian/hardmode'
Bundle 'w0ng/vim-hybrid'
Bundle 'gosukiwi/vim-atom-dark'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on

" Non-Plugin stuff after this line

" Function for number toggle
function! NumberToggle()
  if(&relativenumber == 1)
    set norelativenumber
  else
    set relativenumber
  endif
endfunc

nnoremap <C-N> :call NumberToggle()<cr>

" Function for whitespace toggle
function! WhitespaceToggle()
  set listchars=eol:Â¬,tab:--,trail:~,extends:>,precedes:<
  if(&list ==1)
    set nolist
  else
    set list
  endif
endfunc

nnoremap <C-T> :call WhitespaceToggle()<cr>

" Non-mapped function for tab toggles
function TabToggle()
  if &expandtab
    set shiftwidth=4
    set softtabstop=4
    set noexpandtab
  else
    set shiftwidth=2
    set softtabstop=2
    set expandtab
  endif
endfunc

" Remappings
"    Disable arrows 
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>
"    Nerdtree
map <C-F> :NERDTreeToggle<CR>

" Other options
set t_Co=256
set relativenumber
set number
let mapleader=','
set backspace=2
colorscheme dracula 
syntax on
set laststatus=2
set noshowmode

" Check the function above, these
" are my default values
set tabstop=2
set shiftwidth=2
set expandtab
